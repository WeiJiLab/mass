Mass_Operand_Tag_None :: 0
Mass_Operand_Tag_Any :: 1
Mass_Operand_Tag_Eflags :: 2
Mass_Operand_Tag_Register :: 3
Mass_Operand_Tag_Xmm :: 4
Mass_Operand_Tag_Immediate_8 :: 5
Mass_Operand_Tag_Immediate_16 :: 6
Mass_Operand_Tag_Immediate_32 :: 7
Mass_Operand_Tag_Immediate_64 :: 8
Mass_Operand_Tag_Memory_Indirect :: 9
Mass_Operand_Tag_Sib :: 10
Mass_Operand_Tag_RIP_Relative :: 11
Mass_Operand_Tag_RIP_Relative_Import :: 12
Mass_Operand_Tag_Label_32 :: 13

Mass_Section_Permissions_Read :: 1
Mass_Section_Permissions_Write :: 2
Mass_Section_Permissions_Execute :: 4

Mass_Section :: struct {
  buffer : Bucket_Buffer *
  name : Slice
  base_rva : u32
  permissions : Section_Permissions
}

Mass_Register_A :: 0
Mass_Register_C :: 1
Mass_Register_D :: 2
Mass_Register_B :: 3
Mass_Register_SP :: 4
Mass_Register_AH :: 4
Mass_Register_BP :: 5
Mass_Register_CH :: 4
Mass_Register_SI :: 6
Mass_Register_DH :: 4
Mass_Register_DI :: 7
Mass_Register_BH :: 4
Mass_Register_R8 :: 8
Mass_Register_R9 :: 9
Mass_Register_R10 :: 10
Mass_Register_R11 :: 11
Mass_Register_R12 :: 12
Mass_Register_R13 :: 13
Mass_Register_R14 :: 14
Mass_Register_R15 :: 15
Mass_Register_Xmm0 :: 16
Mass_Register_Xmm1 :: 17
Mass_Register_Xmm2 :: 18
Mass_Register_Xmm3 :: 19
Mass_Register_Xmm4 :: 20
Mass_Register_Xmm5 :: 21
Mass_Register_Xmm6 :: 22
Mass_Register_Xmm7 :: 23
Mass_Register_Xmm8 :: 24
Mass_Register_Xmm9 :: 25
Mass_Register_Xmm10 :: 26
Mass_Register_Xmm11 :: 27
Mass_Register_Xmm12 :: 28
Mass_Register_Xmm13 :: 29
Mass_Register_Xmm14 :: 30
Mass_Register_Xmm15 :: 31

Mass_SIB_Scale_1 :: 0
Mass_SIB_Scale_2 :: 1
Mass_SIB_Scale_4 :: 2
Mass_SIB_Scale_8 :: 3

Mass_Operand_Sib :: struct {
  scale : SIB_Scale
  index : Register
  base : Register
  displacement : s32
}

Mass_Operand_Memory_Indirect :: struct {
  reg : Register
  displacement : s32
}

Mass_Label_Index :: struct {
  value : u64
}

Mass_Label :: struct {
  section : Section *
  offset_in_section : u32
}

Mass_Label_Location_Diff_Patch_Info :: struct {
  target_label_index : Label_Index
  from : Label
  patch_target : s32 *
}

Mass_Import_Symbol :: struct {
  name : Slice
  name_rva : u32
  label32 : Label_Index
}

Mass_Import_Library :: struct {
  name : Slice
  name_rva : u32
  rva : u32
  symbols : Array_Import_Symbol
  image_thunk_rva : u32
}

Mass_Operand_RIP_Relative_Import :: struct {
  library_name : Slice
  symbol_name : Slice
}

Mass_Compare_Type_Equal :: 1
Mass_Compare_Type_Not_Equal :: 2
Mass_Compare_Type_Unsigned_Below :: 3
Mass_Compare_Type_Unsigned_Below_Equal :: 4
Mass_Compare_Type_Unsigned_Above :: 5
Mass_Compare_Type_Unsigned_Above_Equal :: 6
Mass_Compare_Type_Signed_Less :: 7
Mass_Compare_Type_Signed_Less_Equal :: 8
Mass_Compare_Type_Signed_Greater :: 9
Mass_Compare_Type_Signed_Greater_Equal :: 10

Mass_Compiler_Source_Location :: struct {
  filename : const char *
  function_name : const char *
  line_number : u32
}

Mass_Descriptor_Function_Flags_None :: 0
Mass_Descriptor_Function_Flags_Inline :: 1
Mass_Descriptor_Function_Flags_Pending_Body_Compilation :: 2

Mass_Descriptor_Struct_Field :: struct {
  name : Slice
  descriptor : Descriptor *
  offset : s32
}

Mass_Source_File :: struct {
  path : Slice
  text : Slice
  lines : Array_Range_u64
}

Mass_Source_Position :: struct {
  line : u64
  column : u64
}

Mass_Source_Range :: struct {
  file : const Source_File *
  offsets : Range_u64
}

Mass_Parse_Error :: struct {
  message : Slice
  source_range : Source_Range
}

Mass_Token_Group_Type_Paren :: 1
Mass_Token_Group_Type_Square :: 2
Mass_Token_Group_Type_Curly :: 3

Mass_Token_View :: struct {
  tokens : const Token **
  length : u64
}

Mass_Token_Pattern :: struct {
  tag : Token_Tag
  group_type : Token_Group_Type
  source : Slice
}

