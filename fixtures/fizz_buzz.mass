ExitProcess :: (status : s32) -> (s64) import("kernel32.dll", "ExitProcess")
GetStdHandle :: (handle : s32) -> (s64) import("kernel32.dll", "GetStdHandle")
WriteFile :: (status : s64, buffer : [s8], size : s32, bytes_written : s64, overlapped : s64)
  -> (s64) import("kernel32.dll", "WriteFile")

print :: (integer : s32) -> () {
  buffer : s8[64];
  zero_code :: 48;
  // FIXME should be something like this
  //buffer[0] = zero_code;
  temp := integer;
  count := 0;
  while (temp) {
    temp = temp / 10;
    count = count + 1;
  };
  index := count;
  while (index) {
    index = index + (-1);
    digit_s32 := integer % 10;
    digit := cast(s8, digit_s32);
    set_array_item(buffer, index, zero_code + digit);
    integer = integer / 10;
  };
  WriteFile(GetStdHandle(-11), &buffer, count, 0, 0);
}

fizz_buzz :: () -> () {
  print(42);
  //i := 1;
  //stdout_handle := GetStdHandle(-11);
  //while (i < 101) {
    //print_number := 1;
    ////if (i % 3) {
      ////print_number = 0;
      ////WriteFile(stdout_handle, "fizz", 4, 0, 0);
    ////};
    ////if (i % 5) {
      ////print_number = 0;
      ////WriteFile(stdout_handle, "buzz", 4, 0, 0);
    ////};
    ////if (print_number) {
    //print(i);
    //i := i + 1;
    ////};
  //};
}
